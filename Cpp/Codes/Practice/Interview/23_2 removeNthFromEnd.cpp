#include <gtest/gtest.h>
using namespace std;

namespace IV23_2
{
	/*
	给定一个链表，删除链表的倒数第 n 个节点，并且返回链表的头结点。
	示例：
	给定一个链表: 1->2->3->4->5, 和 n = 2.

	当删除了倒数第二个节点后，链表变为 1->2->3->5.
	说明：
	给定的 n 保证是有效的。
	进阶：
	你能尝试使用一趟扫描实现吗？
	*/

 // Definition for singly-linked list.
	struct ListNode {
		int val;
		ListNode *next;
		ListNode(int x) : val(x), next(NULL) {}
	};
 
	class Solution {
	public:
		ListNode* removeNthFromEnd(ListNode* head, int n) {

			ListNode* next = head;
			ListNode* prev = head;
			int pos = 0;
			while (next != nullptr)
			{
				if (pos > n)
				{
					prev = prev->next;
				}

				next = next->next;
			}

			if (prev == head)
			{
				head = prev->next;
			}
			else if (prev->next)
			{
				prev->next = prev->next->next;
			}
			else
			{
				prev->next = nullptr;
			}
		}
	};

	TEST(Interview, removeNthFromEnd)
	{
		
	}

}